{"ast":null,"code":"import _objectSpread from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"samples\", \"depth\"];\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\n\n// ðŸ‘‡ uncomment when TS version supports function overloads\n// export function useFBO(settings?: FBOSettings)\nfunction useFBO( /** Width in pixels, or settings (will render fullscreen by default) */\nwidth, /** Height in pixels */\nheight, /**Settings */\nsettings) {\n  var size = useThree(function (state) {\n    return state.size;\n  });\n  var viewport = useThree(function (state) {\n    return state.viewport;\n  });\n  var _width = typeof width === 'number' ? width : size.width * viewport.dpr;\n  var _height = typeof height === 'number' ? height : size.height * viewport.dpr;\n  var _settings = (typeof width === 'number' ? settings : width) || {};\n  var _settings$samples = _settings.samples,\n    samples = _settings$samples === void 0 ? 0 : _settings$samples,\n    depth = _settings.depth,\n    targetSettings = _objectWithoutProperties(_settings, _excluded);\n  var target = React.useMemo(function () {\n    var target = new THREE.WebGLRenderTarget(_width, _height, _objectSpread({\n      minFilter: THREE.LinearFilter,\n      magFilter: THREE.LinearFilter,\n      type: THREE.HalfFloatType\n    }, targetSettings));\n    if (depth) {\n      target.depthTexture = new THREE.DepthTexture(_width, _height, THREE.FloatType);\n    }\n    target.samples = samples;\n    return target;\n  }, []);\n  React.useLayoutEffect(function () {\n    target.setSize(_width, _height);\n    if (samples) target.samples = samples;\n  }, [samples, target, _width, _height]);\n  React.useEffect(function () {\n    return function () {\n      return target.dispose();\n    };\n  }, []);\n  return target;\n}\nexport { useFBO };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
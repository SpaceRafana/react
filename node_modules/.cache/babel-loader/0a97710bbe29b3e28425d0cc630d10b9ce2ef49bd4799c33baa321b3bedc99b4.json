{"ast":null,"code":"import _objectSpread from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createClass from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as THREE from 'three';\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  var material = /*#__PURE__*/function (_THREE$ShaderMaterial) {\n    _inherits(material, _THREE$ShaderMaterial);\n    var _super = _createSuper(material);\n    function material() {\n      var _this;\n      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, material);\n      var entries = Object.entries(uniforms);\n      // Create unforms and shaders\n      _this = _super.call(this, {\n        uniforms: entries.reduce(function (acc, _ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            name = _ref2[0],\n            value = _ref2[1];\n          var uniform = THREE.UniformsUtils.clone(_defineProperty({}, name, {\n            value: value\n          }));\n          return _objectSpread(_objectSpread({}, acc), uniform);\n        }, {}),\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader\n      });\n      // Create getter/setters\n      _this.key = '';\n      entries.forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n          name = _ref4[0];\n        return Object.defineProperty(_assertThisInitialized(_this), name, {\n          get: function get() {\n            return _this.uniforms[name].value;\n          },\n          set: function set(v) {\n            return _this.uniforms[name].value = v;\n          }\n        });\n      });\n\n      // Assign parameters, this might include uniforms\n      Object.assign(_assertThisInitialized(_this), parameters);\n      // Call onInit\n      if (onInit) onInit(_assertThisInitialized(_this));\n      return _this;\n    }\n    return _createClass(material);\n  }(THREE.ShaderMaterial);\n  material.key = THREE.MathUtils.generateUUID();\n  return material;\n}\nexport { shaderMaterial };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
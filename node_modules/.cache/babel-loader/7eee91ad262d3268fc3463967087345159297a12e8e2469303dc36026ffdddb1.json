{"ast":null,"code":"import ReferenceNode from './ReferenceNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nclass MaterialReferenceNode extends ReferenceNode {\n  constructor(property, inputType, material = null) {\n    super(property, inputType, material);\n    this.material = material;\n    this.updateType = NodeUpdateType.RENDER;\n  }\n  updateReference(frame) {\n    this.reference = this.material !== null ? this.material : frame.material;\n    return this.reference;\n  }\n  setup(builder) {\n    const material = this.material !== null ? this.material : builder.material;\n    this.node.value = material[this.property];\n    return super.setup(builder);\n  }\n}\nexport default MaterialReferenceNode;\nexport const materialReference = (name, type, material) => nodeObject(new MaterialReferenceNode(name, type, material));\naddNodeClass('MaterialReferenceNode', MaterialReferenceNode);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
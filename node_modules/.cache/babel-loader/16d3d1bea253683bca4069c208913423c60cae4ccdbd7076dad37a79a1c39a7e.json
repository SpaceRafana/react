{"ast":null,"code":"import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { diffuseColor, metalness, roughness, specularColor } from '../core/PropertyNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { materialRoughness, materialMetalness } from '../accessors/MaterialNode.js';\nimport getRoughness from '../functions/material/getRoughness.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport { float, vec3, vec4 } from '../shadernode/ShaderNode.js';\nimport { MeshStandardMaterial } from 'three';\nconst defaultValues = new MeshStandardMaterial();\nclass MeshStandardNodeMaterial extends NodeMaterial {\n  constructor(parameters) {\n    super();\n    this.isMeshStandardNodeMaterial = true;\n    this.emissiveNode = null;\n    this.metalnessNode = null;\n    this.roughnessNode = null;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n  setupLightingModel( /*builder*/\n  ) {\n    return new PhysicalLightingModel(false, false); // ( clearcoat, sheen ) -> standard\n  }\n\n  setupVariants({\n    stack\n  }) {\n    // METALNESS\n\n    const metalnessNode = this.metalnessNode ? float(this.metalnessNode) : materialMetalness;\n    stack.assign(metalness, metalnessNode);\n\n    // ROUGHNESS\n\n    let roughnessNode = this.roughnessNode ? float(this.roughnessNode) : materialRoughness;\n    roughnessNode = getRoughness({\n      roughness: roughnessNode\n    });\n    stack.assign(roughness, roughnessNode);\n\n    // SPECULAR COLOR\n\n    const specularColorNode = mix(vec3(0.04), diffuseColor.rgb, metalnessNode);\n    stack.assign(specularColor, specularColorNode);\n\n    // DIFFUSE COLOR\n\n    stack.assign(diffuseColor, vec4(diffuseColor.rgb.mul(metalnessNode.oneMinus()), diffuseColor.a));\n  }\n  copy(source) {\n    this.emissiveNode = source.emissiveNode;\n    this.metalnessNode = source.metalnessNode;\n    this.roughnessNode = source.roughnessNode;\n    return super.copy(source);\n  }\n}\nexport default MeshStandardNodeMaterial;\naddNodeMaterial('MeshStandardNodeMaterial', MeshStandardNodeMaterial);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mon Site\\\\portfolio-react\\\\src\\\\components\\\\Cube.jsx\",\n  _s = $RefreshSig$();\nimport { useFrame } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport Img from \"../img/space-lunar-v3-4k.jpg\";\nimport { PerspectiveCamera, RenderTexture, Text } from \"@react-three/drei\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cube() {\n  _s();\n  const textRef = useRef();\n  const boxRef = useRef();\n  useFrame(state => textRef.current.position.x = Math.sin(state.clock.elapsedTime) * 4);\n  useFrame(state => boxRef.current.rotation.y += 0.003);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    rotation: [1, 0.5, -0.4],\n    ref: boxRef,\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [3, 3, 3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n      children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        position: [0, 0, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RenderTexture, {\n        attach: \"map\",\n        image: Img,\n        children: [/*#__PURE__*/_jsxDEV(\"color\", {\n          attach: \"background\",\n          args: [\"#444444\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ref: textRef,\n          color: \"#D6F42A\",\n          fontSize: 4,\n          children: \"Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Cube, \"TFMoIRKKGuSXDNN1l+bD03Mb2ps=\", false, function () {\n  return [useFrame, useFrame];\n});\n_c = Cube;\nvar _c;\n$RefreshReg$(_c, \"Cube\");","map":{"version":3,"names":["useFrame","useRef","Img","PerspectiveCamera","RenderTexture","Text","jsxDEV","_jsxDEV","Cube","_s","textRef","boxRef","state","current","position","x","Math","sin","clock","elapsedTime","rotation","y","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","attach","image","color","fontSize","_c","$RefreshReg$"],"sources":["E:/Mon Site/portfolio-react/src/components/Cube.jsx"],"sourcesContent":["import {useFrame} from \"@react-three/fiber\";\r\nimport {useRef} from \"react\";\r\nimport Img from \"../img/space-lunar-v3-4k.jpg\"\r\nimport {\r\n    PerspectiveCamera,\r\n    RenderTexture,\r\n    Text\r\n} from \"@react-three/drei\";\r\n\r\nexport default function Cube() {\r\n    const textRef = useRef()\r\n    const boxRef =useRef()\r\n    useFrame(state => (textRef.current.position.x = Math.sin(state.clock.elapsedTime)*4))\r\n    useFrame(state => (boxRef.current.rotation.y += 0.003))\r\n\r\n    return (\r\n        <mesh rotation={[1,0.5,-0.4]} ref={boxRef}>\r\n            <boxGeometry args={[3,3,3]}/>\r\n            <meshPhongMaterial>\r\n                <PerspectiveCamera position={[0,0,3]}/>\r\n                <RenderTexture attach=\"map\" image={Img}>\r\n                    <color attach=\"background\" args={[\"#444444\"]}/>\r\n                    <Text ref={textRef} color=\"#D6F42A\" fontSize={4}>\r\n                        Services\r\n                    </Text>\r\n                </RenderTexture>\r\n            </meshPhongMaterial>\r\n        </mesh>\r\n    )\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,oBAAoB;AAC3C,SAAQC,MAAM,QAAO,OAAO;AAC5B,OAAOC,GAAG,MAAM,8BAA8B;AAC9C,SACIC,iBAAiB,EACjBC,aAAa,EACbC,IAAI,QACD,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,MAAM,CAAC,CAAC;EACxB,MAAMU,MAAM,GAAEV,MAAM,CAAC,CAAC;EACtBD,QAAQ,CAACY,KAAK,IAAKF,OAAO,CAACG,OAAO,CAACC,QAAQ,CAACC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACL,KAAK,CAACM,KAAK,CAACC,WAAW,CAAC,GAAC,CAAE,CAAC;EACrFnB,QAAQ,CAACY,KAAK,IAAKD,MAAM,CAACE,OAAO,CAACO,QAAQ,CAACC,CAAC,IAAI,KAAM,CAAC;EAEvD,oBACId,OAAA;IAAMa,QAAQ,EAAE,CAAC,CAAC,EAAC,GAAG,EAAC,CAAC,GAAG,CAAE;IAACE,GAAG,EAAEX,MAAO;IAAAY,QAAA,gBACtChB,OAAA;MAAaiB,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC7BrB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA,CAACJ,iBAAiB;QAACW,QAAQ,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvCrB,OAAA,CAACH,aAAa;QAACyB,MAAM,EAAC,KAAK;QAACC,KAAK,EAAE5B,GAAI;QAAAqB,QAAA,gBACnChB,OAAA;UAAOsB,MAAM,EAAC,YAAY;UAACL,IAAI,EAAE,CAAC,SAAS;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC/CrB,OAAA,CAACF,IAAI;UAACiB,GAAG,EAAEZ,OAAQ;UAACqB,KAAK,EAAC,SAAS;UAACC,QAAQ,EAAE,CAAE;UAAAT,QAAA,EAAC;QAEjD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEf;AAACnB,EAAA,CApBuBD,IAAI;EAAA,QAGxBR,QAAQ,EACRA,QAAQ;AAAA;AAAAiC,EAAA,GAJYzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
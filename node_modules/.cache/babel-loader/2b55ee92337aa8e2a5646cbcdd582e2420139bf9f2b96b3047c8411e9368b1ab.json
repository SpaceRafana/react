{"ast":null,"code":"import LightingModel from '../core/LightingModel.js';\nimport F_Schlick from './BSDF/F_Schlick.js';\nimport BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport { diffuseColor } from '../core/PropertyNode.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { materialSpecularStrength } from '../accessors/MaterialNode.js';\nimport { shininess, specularColor } from '../core/PropertyNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { tslFn, float } from '../shadernode/ShaderNode.js';\nconst G_BlinnPhong_Implicit = () => float(0.25);\nconst D_BlinnPhong = tslFn(({\n  dotNH\n}) => {\n  return shininess.mul(0.5 / Math.PI).add(1.0).mul(dotNH.pow(shininess));\n});\nconst BRDF_BlinnPhong = tslFn(({\n  lightDirection\n}) => {\n  const halfDir = lightDirection.add(positionViewDirection).normalize();\n  const dotNH = transformedNormalView.dot(halfDir).clamp();\n  const dotVH = positionViewDirection.dot(halfDir).clamp();\n  const F = F_Schlick({\n    f0: specularColor,\n    f90: 1.0,\n    dotVH\n  });\n  const G = G_BlinnPhong_Implicit();\n  const D = D_BlinnPhong({\n    dotNH\n  });\n  return F.mul(G).mul(D);\n});\nclass PhongLightingModel extends LightingModel {\n  constructor(specular = true) {\n    super();\n    this.specular = specular;\n  }\n  direct({\n    lightDirection,\n    lightColor,\n    reflectedLight\n  }) {\n    const dotNL = transformedNormalView.dot(lightDirection).clamp();\n    const irradiance = dotNL.mul(lightColor);\n    reflectedLight.directDiffuse.addAssign(irradiance.mul(BRDF_Lambert({\n      diffuseColor: diffuseColor.rgb\n    })));\n    if (this.specular === true) {\n      reflectedLight.directSpecular.addAssign(irradiance.mul(BRDF_BlinnPhong({\n        lightDirection\n      })).mul(materialSpecularStrength));\n    }\n  }\n  indirectDiffuse({\n    irradiance,\n    reflectedLight\n  }) {\n    reflectedLight.indirectDiffuse.addAssign(irradiance.mul(BRDF_Lambert({\n      diffuseColor\n    })));\n  }\n}\nexport default PhongLightingModel;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
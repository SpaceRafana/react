{"ast":null,"code":"import _classCallCheck from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nvar LineGeometry = /*#__PURE__*/function (_LineSegmentsGeometry) {\n  _inherits(LineGeometry, _LineSegmentsGeometry);\n  var _super = _createSuper(LineGeometry);\n  function LineGeometry() {\n    var _this;\n    _classCallCheck(this, LineGeometry);\n    _this = _super.call(this);\n    _this.isLineGeometry = true;\n    _this.type = \"LineGeometry\";\n    return _this;\n  }\n  _createClass(LineGeometry, [{\n    key: \"setPositions\",\n    value: function setPositions(array) {\n      var length = array.length - 3;\n      var points = new Float32Array(2 * length);\n      for (var i = 0; i < length; i += 3) {\n        points[2 * i] = array[i];\n        points[2 * i + 1] = array[i + 1];\n        points[2 * i + 2] = array[i + 2];\n        points[2 * i + 3] = array[i + 3];\n        points[2 * i + 4] = array[i + 4];\n        points[2 * i + 5] = array[i + 5];\n      }\n      _get(_getPrototypeOf(LineGeometry.prototype), \"setPositions\", this).call(this, points);\n      return this;\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors(array) {\n      var length = array.length - 3;\n      var colors = new Float32Array(2 * length);\n      for (var i = 0; i < length; i += 3) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n      }\n      _get(_getPrototypeOf(LineGeometry.prototype), \"setColors\", this).call(this, colors);\n      return this;\n    }\n  }, {\n    key: \"fromLine\",\n    value: function fromLine(line) {\n      var geometry = line.geometry;\n      this.setPositions(geometry.attributes.position.array);\n      return this;\n    }\n  }]);\n  return LineGeometry;\n}(LineSegmentsGeometry);\nexport { LineGeometry };\n//# sourceMappingURL=LineGeometry.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
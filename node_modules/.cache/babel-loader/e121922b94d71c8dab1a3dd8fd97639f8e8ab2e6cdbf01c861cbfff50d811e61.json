{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nclass ExpressionNode extends Node {\n  constructor(snippet = '', nodeType = 'void') {\n    super(nodeType);\n    this.snippet = snippet;\n  }\n  generate(builder, output) {\n    const type = this.getNodeType(builder);\n    const snippet = this.snippet;\n    if (type === 'void') {\n      builder.addLineFlowCode(snippet);\n    } else {\n      return builder.format(`( ${snippet} )`, type, output);\n    }\n  }\n}\nexport default ExpressionNode;\nexport const expression = nodeProxy(ExpressionNode);\naddNodeClass('ExpressionNode', ExpressionNode);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { WebGLRenderTarget, NearestFilter, MeshDepthMaterial, RGBADepthPacking, NoBlending, UniformsUtils, ShaderMaterial, Color } from \"three\";\nimport { BokehShader } from \"../shaders/BokehShader.js\";\nvar BokehPass = /*#__PURE__*/function (_Pass) {\n  _inherits(BokehPass, _Pass);\n  var _super = _createSuper(BokehPass);\n  function BokehPass(scene, camera, params) {\n    var _this;\n    _classCallCheck(this, BokehPass);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"scene\");\n    __publicField(_assertThisInitialized(_this), \"camera\");\n    __publicField(_assertThisInitialized(_this), \"renderTargetDepth\");\n    __publicField(_assertThisInitialized(_this), \"materialDepth\");\n    __publicField(_assertThisInitialized(_this), \"materialBokeh\");\n    __publicField(_assertThisInitialized(_this), \"fsQuad\");\n    __publicField(_assertThisInitialized(_this), \"_oldClearColor\");\n    __publicField(_assertThisInitialized(_this), \"uniforms\");\n    _this.scene = scene;\n    _this.camera = camera;\n    var focus = params.focus !== void 0 ? params.focus : 1;\n    var aspect = params.aspect !== void 0 ? params.aspect : camera.aspect;\n    var aperture = params.aperture !== void 0 ? params.aperture : 0.025;\n    var maxblur = params.maxblur !== void 0 ? params.maxblur : 1;\n    var width = params.width || window.innerWidth || 1;\n    var height = params.height || window.innerHeight || 1;\n    _this.renderTargetDepth = new WebGLRenderTarget(width, height, {\n      minFilter: NearestFilter,\n      magFilter: NearestFilter\n    });\n    _this.renderTargetDepth.texture.name = \"BokehPass.depth\";\n    _this.materialDepth = new MeshDepthMaterial();\n    _this.materialDepth.depthPacking = RGBADepthPacking;\n    _this.materialDepth.blending = NoBlending;\n    if (BokehShader === void 0) {\n      console.error(\"BokehPass relies on BokehShader\");\n    }\n    var bokehShader = BokehShader;\n    var bokehUniforms = UniformsUtils.clone(bokehShader.uniforms);\n    bokehUniforms[\"tDepth\"].value = _this.renderTargetDepth.texture;\n    bokehUniforms[\"focus\"].value = focus;\n    bokehUniforms[\"aspect\"].value = aspect;\n    bokehUniforms[\"aperture\"].value = aperture;\n    bokehUniforms[\"maxblur\"].value = maxblur;\n    bokehUniforms[\"nearClip\"].value = camera.near;\n    bokehUniforms[\"farClip\"].value = camera.far;\n    _this.materialBokeh = new ShaderMaterial({\n      defines: Object.assign({}, bokehShader.defines),\n      uniforms: bokehUniforms,\n      vertexShader: bokehShader.vertexShader,\n      fragmentShader: bokehShader.fragmentShader\n    });\n    _this.uniforms = bokehUniforms;\n    _this.needsSwap = false;\n    _this.fsQuad = new FullScreenQuad(_this.materialBokeh);\n    _this._oldClearColor = new Color();\n    return _this;\n  }\n  _createClass(BokehPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      this.scene.overrideMaterial = this.materialDepth;\n      renderer.getClearColor(this._oldClearColor);\n      var oldClearAlpha = renderer.getClearAlpha();\n      var oldAutoClear = renderer.autoClear;\n      renderer.autoClear = false;\n      renderer.setClearColor(16777215);\n      renderer.setClearAlpha(1);\n      renderer.setRenderTarget(this.renderTargetDepth);\n      renderer.clear();\n      renderer.render(this.scene, this.camera);\n      this.uniforms[\"tColor\"].value = readBuffer.texture;\n      this.uniforms[\"nearClip\"].value = this.camera.near;\n      this.uniforms[\"farClip\"].value = this.camera.far;\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n      this.scene.overrideMaterial = null;\n      renderer.setClearColor(this._oldClearColor);\n      renderer.setClearAlpha(oldClearAlpha);\n      renderer.autoClear = oldAutoClear;\n    }\n  }]);\n  return BokehPass;\n}(Pass);\nexport { BokehPass };\n//# sourceMappingURL=BokehPass.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _regeneratorRuntime from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as React from 'react';\nimport { useEffect, useContext, createContext } from 'react';\nimport { suspend, clear } from 'suspend-react';\n\n/* eslint react-hooks/exhaustive-deps: 1 */\nvar FaceLandmarkerContext = /* @__PURE__ */createContext({});\nvar FaceLandmarkerDefaults = {\n  basePath: 'https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.2/wasm',\n  options: {\n    baseOptions: {\n      modelAssetPath: 'https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task',\n      delegate: 'GPU'\n    },\n    runningMode: 'VIDEO',\n    outputFaceBlendshapes: true,\n    outputFacialTransformationMatrixes: true\n  }\n};\nfunction FaceLandmarker(_ref) {\n  var _ref$basePath = _ref.basePath,\n    basePath = _ref$basePath === void 0 ? FaceLandmarkerDefaults.basePath : _ref$basePath,\n    _ref$options = _ref.options,\n    options = _ref$options === void 0 ? FaceLandmarkerDefaults.options : _ref$options,\n    children = _ref.children;\n  var opts = JSON.stringify(options);\n  var faceLandmarker = suspend( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var _yield$import, FilesetResolver, FaceLandmarker, vision;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return import('@mediapipe/tasks-vision');\n        case 2:\n          _yield$import = _context.sent;\n          FilesetResolver = _yield$import.FilesetResolver;\n          FaceLandmarker = _yield$import.FaceLandmarker;\n          _context.next = 7;\n          return FilesetResolver.forVisionTasks(basePath);\n        case 7:\n          vision = _context.sent;\n          return _context.abrupt(\"return\", FaceLandmarker.createFromOptions(vision, options));\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  })), [basePath, opts]);\n  useEffect(function () {\n    return function () {\n      faceLandmarker == null || faceLandmarker.close();\n      clear([basePath, opts]);\n    };\n  }, [faceLandmarker, basePath, opts]);\n  return /*#__PURE__*/React.createElement(FaceLandmarkerContext.Provider, {\n    value: faceLandmarker\n  }, children);\n}\nfunction useFaceLandmarker() {\n  return useContext(FaceLandmarkerContext);\n}\nexport { FaceLandmarker, FaceLandmarkerDefaults, useFaceLandmarker };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
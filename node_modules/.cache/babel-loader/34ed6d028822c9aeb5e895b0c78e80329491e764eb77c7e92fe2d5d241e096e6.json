{"ast":null,"code":"import TempNode from '../core/TempNode.js';\nimport { positionWorldDirection } from '../accessors/PositionNode.js';\nimport { nodeProxy, vec2 } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\nclass EquirectUVNode extends TempNode {\n  constructor(dirNode = positionWorldDirection) {\n    super('vec2');\n    this.dirNode = dirNode;\n  }\n  setup() {\n    const dir = this.dirNode;\n    const u = dir.z.atan2(dir.x).mul(1 / (Math.PI * 2)).add(0.5);\n    const v = dir.y.negate().clamp(-1.0, 1.0).asin().mul(1 / Math.PI).add(0.5); // @TODO: The use of negate() here could be an NDC issue.\n\n    return vec2(u, v);\n  }\n}\nexport default EquirectUVNode;\nexport const equirectUV = nodeProxy(EquirectUVNode);\naddNodeClass('EquirectUVNode', EquirectUVNode);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
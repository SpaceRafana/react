{"ast":null,"code":"import _objectSpread from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"unsuspend\", \"start\", \"crossOrigin\", \"muted\", \"loop\"];\nimport * as THREE from 'three';\nimport { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nfunction useVideoTexture(src, props) {\n  var _unsuspend$crossOrigi = _objectSpread({\n      unsuspend: 'loadedmetadata',\n      crossOrigin: 'Anonymous',\n      muted: true,\n      loop: true,\n      start: true,\n      playsInline: true\n    }, props),\n    unsuspend = _unsuspend$crossOrigi.unsuspend,\n    start = _unsuspend$crossOrigi.start,\n    crossOrigin = _unsuspend$crossOrigi.crossOrigin,\n    muted = _unsuspend$crossOrigi.muted,\n    loop = _unsuspend$crossOrigi.loop,\n    rest = _objectWithoutProperties(_unsuspend$crossOrigi, _excluded);\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var texture = suspend(function () {\n    return new Promise(function (res, rej) {\n      var video = Object.assign(document.createElement('video'), _objectSpread({\n        src: typeof src === 'string' && src || undefined,\n        srcObject: src instanceof MediaStream && src || undefined,\n        crossOrigin: crossOrigin,\n        loop: loop,\n        muted: muted\n      }, rest));\n      var texture = new THREE.VideoTexture(video);\n      if ('colorSpace' in texture) texture.colorSpace = gl.outputColorSpace;else texture.encoding = gl.outputEncoding;\n      video.addEventListener(unsuspend, function () {\n        return res(texture);\n      });\n    });\n  }, [src]);\n  useEffect(function () {\n    return void (start && texture.image.play());\n  }, [texture, start]);\n  return texture;\n}\nexport { useVideoTexture };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
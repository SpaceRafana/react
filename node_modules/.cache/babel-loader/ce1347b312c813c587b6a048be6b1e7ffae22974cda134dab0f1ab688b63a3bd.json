{"ast":null,"code":"import _slicedToArray from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"font\", \"color\", \"bevelSize\", \"debug\", \"children\"];\nimport * as React from 'react';\nimport { Text3D } from './Text3D.js';\nimport { Center } from './Center.js';\n\n/* eslint react-hooks/exhaustive-deps: 1 */\nvar Example = /* @__PURE__ */React.forwardRef(function (_ref, fref) {\n  var font = _ref.font,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? '#cbcbcb' : _ref$color,\n    _ref$bevelSize = _ref.bevelSize,\n    bevelSize = _ref$bevelSize === void 0 ? 0.04 : _ref$bevelSize,\n    _ref$debug = _ref.debug,\n    debug = _ref$debug === void 0 ? false : _ref$debug,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    counter = _React$useState2[0],\n    setCounter = _React$useState2[1];\n  var incr = React.useCallback(function () {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return setCounter(counter + x);\n  }, [counter]);\n  var decr = React.useCallback(function () {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return setCounter(counter - x);\n  }, [counter]);\n\n  // ref-API\n  var api = React.useMemo(function () {\n    return {\n      incr: incr,\n      decr: decr\n    };\n  }, [incr, decr]);\n  React.useImperativeHandle(fref, function () {\n    return api;\n  }, [api]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: null\n  }, /*#__PURE__*/React.createElement(Center, {\n    top: true,\n    cacheKey: JSON.stringify({\n      counter: counter,\n      font: font\n    })\n  }, /*#__PURE__*/React.createElement(Text3D, {\n    bevelEnabled: true,\n    bevelSize: bevelSize,\n    font: font\n  }, debug ? /*#__PURE__*/React.createElement(\"meshNormalMaterial\", {\n    wireframe: true\n  }) : /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    color: color\n  }), counter))), children);\n});\nexport { Example };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
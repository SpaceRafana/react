{"ast":null,"code":"import _construct from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nfunction useHelper(object3D, helperConstructor) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  var helper = React.useRef();\n  var scene = useThree(function (state) {\n    return state.scene;\n  });\n  React.useLayoutEffect(function () {\n    var currentHelper = undefined;\n    if (object3D && object3D != null && object3D.current && helperConstructor) {\n      helper.current = currentHelper = _construct(helperConstructor, [object3D.current].concat(args));\n    }\n    if (currentHelper) {\n      // Prevent the helpers from blocking rays\n      currentHelper.traverse(function (child) {\n        return child.raycast = function () {\n          return null;\n        };\n      });\n      scene.add(currentHelper);\n      return function () {\n        helper.current = undefined;\n        scene.remove(currentHelper);\n        currentHelper.dispose == null || currentHelper.dispose();\n      };\n    }\n  }, [scene, helperConstructor, object3D].concat(args));\n  useFrame(function () {\n    var _helper$current;\n    return void ((_helper$current = helper.current) == null || _helper$current.update == null ? void 0 : _helper$current.update());\n  });\n  return helper;\n}\nexport { useHelper };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
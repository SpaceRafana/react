{"ast":null,"code":"import _objectSpread from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MathUtils } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { useSpring, a } from '@react-spring/three';\nimport { useGesture } from '@use-gesture/react';\nfunction PresentationControls(_ref) {\n  var _ref$enabled = _ref.enabled,\n    enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n    snap = _ref.snap,\n    global = _ref.global,\n    domElement = _ref.domElement,\n    _ref$cursor = _ref.cursor,\n    cursor = _ref$cursor === void 0 ? true : _ref$cursor,\n    children = _ref.children,\n    _ref$speed = _ref.speed,\n    speed = _ref$speed === void 0 ? 1 : _ref$speed,\n    _ref$rotation = _ref.rotation,\n    rotation = _ref$rotation === void 0 ? [0, 0, 0] : _ref$rotation,\n    _ref$zoom = _ref.zoom,\n    zoom = _ref$zoom === void 0 ? 1 : _ref$zoom,\n    _ref$polar = _ref.polar,\n    polar = _ref$polar === void 0 ? [0, Math.PI / 2] : _ref$polar,\n    _ref$azimuth = _ref.azimuth,\n    azimuth = _ref$azimuth === void 0 ? [-Infinity, Infinity] : _ref$azimuth,\n    _ref$config = _ref.config,\n    config = _ref$config === void 0 ? {\n      mass: 1,\n      tension: 170,\n      friction: 26\n    } : _ref$config;\n  var events = useThree(function (state) {\n    return state.events;\n  });\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var explDomElement = domElement || events.connected || gl.domElement;\n  var _useThree = useThree(),\n    size = _useThree.size;\n  var rPolar = React.useMemo(function () {\n    return [rotation[0] + polar[0], rotation[0] + polar[1]];\n  }, [rotation[0], polar[0], polar[1]]);\n  var rAzimuth = React.useMemo(function () {\n    return [rotation[1] + azimuth[0], rotation[1] + azimuth[1]];\n  }, [rotation[1], azimuth[0], azimuth[1]]);\n  var rInitial = React.useMemo(function () {\n    return [MathUtils.clamp.apply(MathUtils, [rotation[0]].concat(_toConsumableArray(rPolar))), MathUtils.clamp.apply(MathUtils, [rotation[1]].concat(_toConsumableArray(rAzimuth))), rotation[2]];\n  }, [rotation[0], rotation[1], rotation[2], rPolar, rAzimuth]);\n  var _useSpring = useSpring(function () {\n      return {\n        scale: 1,\n        rotation: rInitial,\n        config: config\n      };\n    }),\n    _useSpring2 = _slicedToArray(_useSpring, 2),\n    spring = _useSpring2[0],\n    api = _useSpring2[1];\n  React.useEffect(function () {\n    return void api.start({\n      scale: 1,\n      rotation: rInitial,\n      config: config\n    });\n  }, [rInitial]);\n  React.useEffect(function () {\n    if (global && cursor && enabled) {\n      explDomElement.style.cursor = 'grab';\n      gl.domElement.style.cursor = '';\n      return function () {\n        explDomElement.style.cursor = 'default';\n        gl.domElement.style.cursor = 'default';\n      };\n    }\n  }, [global, cursor, explDomElement, enabled]);\n  var bind = useGesture({\n    onHover: function onHover(_ref2) {\n      var last = _ref2.last;\n      if (cursor && !global && enabled) explDomElement.style.cursor = last ? 'auto' : 'grab';\n    },\n    onDrag: function onDrag(_ref3) {\n      var down = _ref3.down,\n        _ref3$delta = _slicedToArray(_ref3.delta, 2),\n        x = _ref3$delta[0],\n        y = _ref3$delta[1],\n        _ref3$memo = _ref3.memo,\n        _ref3$memo2 = _ref3$memo === void 0 ? spring.rotation.animation.to || rInitial : _ref3$memo,\n        _ref3$memo3 = _slicedToArray(_ref3$memo2, 2),\n        oldY = _ref3$memo3[0],\n        oldX = _ref3$memo3[1];\n      if (!enabled) return [y, x];\n      if (cursor) explDomElement.style.cursor = down ? 'grabbing' : 'grab';\n      x = MathUtils.clamp.apply(MathUtils, [oldX + x / size.width * Math.PI * speed].concat(_toConsumableArray(rAzimuth)));\n      y = MathUtils.clamp.apply(MathUtils, [oldY + y / size.height * Math.PI * speed].concat(_toConsumableArray(rPolar)));\n      var sConfig = snap && !down && typeof snap !== 'boolean' ? snap : config;\n      api.start({\n        scale: down && y > rPolar[1] / 2 ? zoom : 1,\n        rotation: snap && !down ? rInitial : [y, x, 0],\n        config: function config(n) {\n          return n === 'scale' ? _objectSpread(_objectSpread({}, sConfig), {}, {\n            friction: sConfig.friction * 3\n          }) : sConfig;\n        }\n      });\n      return [y, x];\n    }\n  }, {\n    target: global ? explDomElement : undefined\n  });\n  return /*#__PURE__*/React.createElement(a.group, _extends({}, bind == null ? void 0 : bind(), spring), children);\n}\nexport { PresentationControls };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
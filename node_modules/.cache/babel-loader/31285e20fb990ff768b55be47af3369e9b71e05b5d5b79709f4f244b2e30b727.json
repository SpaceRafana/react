{"ast":null,"code":"import _regeneratorRuntime from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/Mon Site/portfolio-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FontLoader } from 'three-stdlib';\nimport { suspend, preload, clear } from 'suspend-react';\nvar fontLoader = null;\nfunction loader(_x) {\n  return _loader.apply(this, arguments);\n}\nfunction _loader() {\n  _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(font) {\n    var data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!fontLoader) fontLoader = new FontLoader();\n          if (!(typeof font === 'string')) {\n            _context.next = 9;\n            break;\n          }\n          _context.next = 4;\n          return fetch(font);\n        case 4:\n          _context.next = 6;\n          return _context.sent.json();\n        case 6:\n          _context.t0 = _context.sent;\n          _context.next = 10;\n          break;\n        case 9:\n          _context.t0 = font;\n        case 10:\n          data = _context.t0;\n          return _context.abrupt(\"return\", fontLoader.parse(data));\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _loader.apply(this, arguments);\n}\nfunction useFont(font) {\n  return suspend(loader, [font]);\n}\nuseFont.preload = function (font) {\n  return preload(loader, [font]);\n};\nuseFont.clear = function (font) {\n  return clear([font]);\n};\nexport { useFont };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
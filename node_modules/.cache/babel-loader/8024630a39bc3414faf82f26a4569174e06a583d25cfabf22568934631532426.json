{"ast":null,"code":"import { div } from '../../math/OperatorNode.js';\nimport { EPSILON } from '../../math/MathNode.js';\nimport { tslFn } from '../../shadernode/ShaderNode.js';\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nconst V_GGX_SmithCorrelated = tslFn(inputs => {\n  const {\n    alpha,\n    dotNL,\n    dotNV\n  } = inputs;\n  const a2 = alpha.pow2();\n  const gv = dotNL.mul(a2.add(a2.oneMinus().mul(dotNV.pow2())).sqrt());\n  const gl = dotNV.mul(a2.add(a2.oneMinus().mul(dotNL.pow2())).sqrt());\n  return div(0.5, gv.add(gl).max(EPSILON));\n}); // validated\n\nexport default V_GGX_SmithCorrelated;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { maxMipLevel } from './MaxMipLevelNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nclass SpecularMIPLevelNode extends Node {\n  constructor(textureNode, roughnessNode = null) {\n    super('float');\n    this.textureNode = textureNode;\n    this.roughnessNode = roughnessNode;\n  }\n  setup() {\n    const {\n      textureNode,\n      roughnessNode\n    } = this;\n\n    // taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\n    const maxMIPLevelScalar = maxMipLevel(textureNode);\n    const sigma = roughnessNode.mul(roughnessNode).mul(Math.PI).div(roughnessNode.add(1.0));\n    const desiredMIPLevel = maxMIPLevelScalar.add(sigma.log2());\n    return desiredMIPLevel.clamp(0.0, maxMIPLevelScalar);\n  }\n}\nexport default SpecularMIPLevelNode;\nexport const specularMIPLevel = nodeProxy(SpecularMIPLevelNode);\naddNodeClass('SpecularMIPLevelNode', SpecularMIPLevelNode);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
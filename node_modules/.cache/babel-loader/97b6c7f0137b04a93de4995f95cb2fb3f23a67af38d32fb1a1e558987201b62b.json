{"ast":null,"code":"import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\nclass MaxMipLevelNode extends UniformNode {\n  constructor(textureNode) {\n    super(0);\n    this.textureNode = textureNode;\n    this.updateType = NodeUpdateType.FRAME;\n  }\n  get texture() {\n    return this.textureNode.value;\n  }\n  update() {\n    const texture = this.texture;\n    const images = texture.images;\n    const image = images && images.length > 0 ? images[0] && images[0].image || images[0] : texture.image;\n    if (image && image.width !== undefined) {\n      const {\n        width,\n        height\n      } = image;\n      this.value = Math.log2(Math.max(width, height));\n    }\n  }\n}\nexport default MaxMipLevelNode;\nexport const maxMipLevel = nodeProxy(MaxMipLevelNode);\naddNodeClass('MaxMipLevelNode', MaxMipLevelNode);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
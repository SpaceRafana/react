{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { cameraViewMatrix } from './CameraNode.js';\nimport { transformedNormalView } from './NormalNode.js';\nimport { positionViewDirection } from './PositionNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nclass ReflectVectorNode extends Node {\n  constructor() {\n    super('vec3');\n  }\n  getHash( /*builder*/\n  ) {\n    return 'reflectVector';\n  }\n  setup() {\n    const reflectView = positionViewDirection.negate().reflect(transformedNormalView);\n    return reflectView.transformDirection(cameraViewMatrix);\n  }\n}\nexport default ReflectVectorNode;\nexport const reflectVector = nodeImmutable(ReflectVectorNode);\naddNodeClass('ReflectVectorNode', ReflectVectorNode);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
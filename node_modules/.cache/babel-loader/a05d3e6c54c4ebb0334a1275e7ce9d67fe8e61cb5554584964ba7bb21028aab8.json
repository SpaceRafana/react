{"ast":null,"code":"import Node, { addNodeClass } from './Node.js';\nimport NodeCache from './NodeCache.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nclass CacheNode extends Node {\n  constructor(node, cache = new NodeCache()) {\n    super();\n    this.isCacheNode = true;\n    this.node = node;\n    this.cache = cache;\n  }\n  getNodeType(builder) {\n    return this.node.getNodeType(builder);\n  }\n  build(builder, ...params) {\n    const previousCache = builder.getCache();\n    builder.setCache(this.cache);\n    const data = this.node.build(builder, ...params);\n    builder.setCache(previousCache);\n    return data;\n  }\n}\nexport default CacheNode;\nexport const cache = nodeProxy(CacheNode);\naddNodeElement('cache', cache);\naddNodeClass('CacheNode', CacheNode);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}